import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class CarBillingSystem {
    private static final Map<String, Integer> carPrices = new HashMap<>();

    static {
        carPrices.put("1", 870000);
        carPrices.put("2", 1009000);
        carPrices.put("3", 1105000);
        carPrices.put("4", 1308000);
        carPrices.put("5", 1489000);
        carPrices.put("6", 1542000);
        carPrices.put("7", 1771000);
    }

    private String carName;
    private boolean insurancePrice;
    private boolean additionalAccessories;
    private double dealerDiscount;

    public CarBillingSystem(String carName, boolean insurancePrice, boolean additionalAccessories, double dealerDiscount) {
        this.carName = carName;
        this.insurancePrice = insurancePrice;
        this.additionalAccessories = additionalAccessories;
        this.dealerDiscount = dealerDiscount;
    }

    public double calculateTotalCost() {
        double carPrice = carPrices.get(carName);
        double totalCost = carPrice + 113990 + 11000;

        if (insurancePrice) {
            totalCost += 47300;
        }
        if (additionalAccessories) {
            totalCost += 15000;
        }

        if (insurancePrice || additionalAccessories) {
            if (dealerDiscount <= 30000) {
                totalCost -= dealerDiscount;
            } else {
                dealerDiscount = 30000; // Apply maximum discount of 30,000
                totalCost -= dealerDiscount;
                System.out.println("Error: Maximum discount allowed is 30,000. Applied maximum discount.");
            }
        } else if (dealerDiscount != 0) {
            System.out.println("Error: Please select at least one additional feature to apply a discount");
            return -1; // or throw an exception
        }

        return totalCost;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Choose a car Number");
        System.out.println("----Polo Trendline--->1");
        System.out.println("----Polo Highline--->2");
        System.out.println("----Virtus Trendline--->3");
        System.out.println("----Virtus Highline--->4");
        System.out.println("----Taigun Trendline--->5");
        System.out.println("----Taigun Highline--->6");
        System.out.println("----Taigun Topline--->7");
        String carName = scanner.nextLine();

        System.out.println("Do you need Insurance? (yes/no)");
        boolean insurancePrice = scanner.nextLine().equalsIgnoreCase("yes");

        System.out.println("Do you need Additional Accessories? (yes/no)");
        boolean additionalAccessories = scanner.nextLine().equalsIgnoreCase("yes");

        System.out.println("Dealer discount (in percentage or rupees):");
        double dealerDiscount = scanner.nextDouble();

        CarBillingSystem billingSystem = new CarBillingSystem(carName, insurancePrice, additionalAccessories, dealerDiscount);
        double totalCost = billingSystem.calculateTotalCost();

        if (totalCost >= 0) {
            DecimalFormat decimalFormat = new DecimalFormat("#,##,##0.00");
            String formattedTotalCost = decimalFormat.format(totalCost);
            String formattedDealerDiscount = decimalFormat.format(dealerDiscount);
            String formattedCarPrice = decimalFormat.format(carPrices.get(carName));
            String formattedRTO = decimalFormat.format(113990);
            String formattedInsurance = decimalFormat.format(insurancePrice ? 47300 : 0);
            String formattedTCS = decimalFormat.format(11000);
            String formattedAccessories = decimalFormat.format(additionalAccessories ? 15000 : 0);

            System.out.println("Output:\nTotal cost " + formattedTotalCost + " (" + carName + " " +
                    formattedCarPrice + " + " + formattedRTO + "(RTO) + " + formattedInsurance + "(Insurance) + " +
                    formattedTCS + "(TCS) + " + formattedAccessories + "(Additional Accessories) - " +
                    formattedDealerDiscount + "(Dealer discount))");
        }
    }
}
